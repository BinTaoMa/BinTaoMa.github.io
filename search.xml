<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>TEST</title>
    <url>/2024/02/02/TEST/</url>
    <content><![CDATA[<p><img src="https://blog-img-mbt321.oss-cn-beijing.aliyuncs.com/img/wallhaven-9depzk.jpg" alt="wallhaven-9depzk"></p>
<details class="toggle" ><summary class="toggle-button" style="">点击以打开</summary><div class="toggle-content"><p>折叠栏目</p>
</div></details>

<div class="tabs" id="样例"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="样例-1">代码</button><button type="button" class="tab " data-href="样例-2">预览</button></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><p>这里是代码</p></div><div class="tab-item-content" id="样例-2"><p>这里是预览</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
]]></content>
      <categories>
        <category>A</category>
        <category>B</category>
      </categories>
      <tags>
        <tag>TEST</tag>
      </tags>
  </entry>
  <entry>
    <title>VsCode配置以及算法的学习思路</title>
    <url>/2024/02/16/VsCode%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E7%AE%97%E6%B3%95%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<h2 id="1-VsCode配置方法"><a href="#1-VsCode配置方法" class="headerlink" title="1.VsCode配置方法"></a>1.VsCode配置方法</h2><p>先用的这个： </p>
<p><a href="https://www.cnblogs.com/Neal-lee/p/13512084.html">https://www.cnblogs.com/Neal-lee/p/13512084.html</a></p>
<p>（可能不需要上面的）</p>
<p>之后是拿这个成功的：</p>
<p><a href="https://blog.csdn.net/davidhopper/article/details/79397487">https://blog.csdn.net/davidhopper/article/details/79397487</a></p>
<p>下面是一些我的电脑的配置细节，你们按照上面走就可以，像安装过dev，就可以直接找到MinGw，不需要再下。</p>
<h4 id="但是但是："><a href="#但是但是：" class="headerlink" title="但是但是："></a>但是但是：</h4><p>dev的那个用的c++太落后了</p>
<p>就vector和 迭代器以及vescode的bug就又得重搞mingw</p>
<p>之后我是跟着这个走的：<a href="https://blog.csdn.net/qq_33472553/article/details/96580127">https://blog.csdn.net/qq_33472553/article/details/96580127</a></p>
<p>要注意的是：要把环境变量的原来的dev那个给删掉      —–</p>
<p>搞这搞了两天搞死我了—-chao</p>
<p>system(“pause”);</p>
<p>可以让黑框框停留下来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">  </span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">  </span><br><span class="line">      &#123;</span><br><span class="line">  </span><br><span class="line">        &quot;name&quot;: &quot;(gdb) Launch&quot;, // 配置名称，将会在启动配置的下拉菜单中显示</span><br><span class="line">  </span><br><span class="line">        &quot;type&quot;: &quot;cppdbg&quot;,    // 配置类型，这里只能为cppdbg</span><br><span class="line">  </span><br><span class="line">        &quot;request&quot;: &quot;launch&quot;,   // 请求配置类型，可以为launch（启动）或attach（附加）</span><br><span class="line">  </span><br><span class="line">        &quot;program&quot;: &quot;$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;,// 将要进行调试的程序的路径</span><br><span class="line">  </span><br><span class="line">        &quot;args&quot;: [],       // 程序调试时传递给程序的命令行参数，一般设为空即可</span><br><span class="line">  </span><br><span class="line">        &quot;stopAtEntry&quot;: false,  // 设为true时程序将暂停在程序入口处，一般设置为false</span><br><span class="line">  </span><br><span class="line">        &quot;cwd&quot;: &quot;$&#123;workspaceRoot&#125;&quot;,// 调试程序时的工作目录，一般为$&#123;workspaceRoot&#125;即代码所在目录</span><br><span class="line">  </span><br><span class="line">        &quot;environment&quot;: [],</span><br><span class="line">  </span><br><span class="line">        &quot;externalConsole&quot;: true,// 调试时是否显示控制台窗口，一般设置为true显示控制台</span><br><span class="line">  </span><br><span class="line">        &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">  </span><br><span class="line">        &quot;miDebuggerPath&quot;: &quot;C:\\Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\gdb.exe&quot;,// miDebugger的路径，注意这里要与MinGw的路径对应</span><br><span class="line">  </span><br><span class="line">        &quot;preLaunchTask&quot;: &quot;g++&quot;, // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc</span><br><span class="line">  </span><br><span class="line">        &quot;setupCommands&quot;: [</span><br><span class="line">  </span><br><span class="line">          &#123;</span><br><span class="line">  </span><br><span class="line">            &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,</span><br><span class="line">  </span><br><span class="line">            &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">  </span><br><span class="line">            &quot;ignoreFailures&quot;: true</span><br><span class="line">  </span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">        ]</span><br><span class="line">  </span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">    ]</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tasks.json</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;0.1.0&quot;,</span><br><span class="line">    &quot;command&quot;: &quot;g++&quot;,</span><br><span class="line">    &quot;args&quot;: [&quot;-g&quot;,&quot;$&#123;file&#125;&quot;,&quot;-o&quot;,&quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;], // 编译命令参数</span><br><span class="line">    &quot;problemMatcher&quot;: &#123;</span><br><span class="line">        &quot;owner&quot;: &quot;cpp&quot;,</span><br><span class="line">        &quot;fileLocation&quot;: [&quot;relative&quot;, &quot;$&#123;workspaceRoot&#125;&quot;],</span><br><span class="line">        &quot;pattern&quot;: &#123;</span><br><span class="line">            &quot;regexp&quot;: &quot;^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$&quot;,</span><br><span class="line">            &quot;file&quot;: 1,</span><br><span class="line">            &quot;line&quot;: 2,</span><br><span class="line">            &quot;column&quot;: 3,</span><br><span class="line">            &quot;severity&quot;: 4,</span><br><span class="line">            &quot;message&quot;: 5</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>ctrl+F2选中所有一样的</p>
<p>设置里面可以改字号</p>
<p>shift+alt+F 自动缩进</p>
<p>以上就是当初配置vscode编写c++的配置过程，下面是当初刚开始接触算法题时候的算法笔记吧（算是</p>
<h2 id="2-bfs经典例题"><a href="#2-bfs经典例题" class="headerlink" title="2.bfs经典例题"></a>2.bfs经典例题</h2><p>—躲障碍—</p>
<p><strong>暑期集训的一天下了大雨，地面出现了许多泥坑，一踩一脚泥。小tao从坐标平面上的点（0，0）出发，准备去向文瀛餐厅（X , Y）（-500≤ X , Y≤ 500)。在路上有N(1≤ N≤ 10000）个泥坑，位于点（Ai，Bi）（-500≤ Ai , Bi≤500)。</strong></p>
<p><strong>小tao为了好好集训，买了一双新鞋子来鼓舞自己，他不想弄脏鞋子，但他也想尽快到达餐厅干饭。如果小tao只能平行于轴线移动，并在整数坐标点转向，请问他到达餐厅且保持鞋子干净要走的最小距离是多少？</strong></p>
<p><strong>保证总是有一条没有泥的路使得小tao可以走到餐厅。</strong></p>
<p><strong>输入： 第1行：三个空间分隔的整数：X、Y和N。 表示餐厅坐标以及泥坑的数量。</strong></p>
<p><strong>第2..N+1行：第i+1行包含两个空格分隔的整数：Ai和Bi。 表示每个泥坑的坐标。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 7</span><br><span class="line">0 2</span><br><span class="line">4 2</span><br><span class="line">3 1</span><br><span class="line">1 1</span><br><span class="line">2 2</span><br><span class="line">-1 1</span><br><span class="line">-1 3</span><br></pre></td></tr></table></figure>

<p><strong>输出：输出小tao在不踩泥的情况下到达文瀛餐厅所需的最小距离。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>

<h4 id="代码c-："><a href="#代码c-：" class="headerlink" title="代码c++："></a>代码c++：</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxn 1005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> x,y,l;<span class="comment">//这里的l表示到坐标为（x,y)的步数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> dx[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">bool</span> vis[maxn][maxn];<span class="comment">//判断是否跑过了 </span></span><br><span class="line"><span class="type">int</span> map[maxn][maxn];<span class="comment">//判断障碍</span></span><br><span class="line"><span class="comment">//判断是否越界，判断是否有障碍物；</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;x&lt;=<span class="number">1000</span>&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;=<span class="number">1000</span>&amp;&amp;!vis[x][y]&amp;&amp;!map[x][y])<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line"> queue&lt;node&gt;q;<span class="comment">//创建队列，&lt;&gt;这里面是类型，q是这个队列的总名</span></span><br><span class="line"> node s;s.x=<span class="number">500</span>,s.y =<span class="number">500</span>,s.l =<span class="number">0</span>;</span><br><span class="line"> q.<span class="built_in">push</span>(s);</span><br><span class="line"> vis[s.x ][s.y ]=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() )&#123;</span><br><span class="line">     <span class="comment">//读取进去的，然后抛弃他</span></span><br><span class="line">  node u=q.<span class="built_in">front</span>() ;q.<span class="built_in">pop</span>() ;</span><br><span class="line">  <span class="keyword">if</span>(u.x ==m&amp;&amp;u.y ==n)&#123;</span><br><span class="line">      <span class="comment">//满足的时候返回路的数值</span></span><br><span class="line">   <span class="keyword">return</span> u.l ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">   <span class="type">int</span> tx=u.x +dx[i];</span><br><span class="line">   <span class="type">int</span> ty=u.y +dy[i];</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">check</span>(tx,ty))&#123;</span><br><span class="line">    node temp;temp.x =tx;temp.y =ty;</span><br><span class="line">    temp.l =u.l+<span class="number">1</span>;</span><br><span class="line">       <span class="comment">//满足条件的话，可以往队例里边加入新的模块</span></span><br><span class="line">    q.<span class="built_in">push</span>(temp);</span><br><span class="line">    vis[tx][ty]=<span class="number">1</span>;  </span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> Y1,X1,NN;</span><br><span class="line">    <span class="comment">//题目要求范围是500~-500，所以</span></span><br><span class="line">	cin&gt;&gt;m&gt;&gt;n&gt;&gt;NN;</span><br><span class="line">	m=m+<span class="number">500</span>;n=n+<span class="number">500</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;NN;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;X1&gt;&gt;Y1;</span><br><span class="line">		map[X1+<span class="number">500</span>][Y1+<span class="number">500</span>]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"> cout&lt;&lt;<span class="built_in">bfs</span>()&lt;&lt;endl;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="代码java："><a href="#代码java：" class="headerlink" title="代码java："></a>代码java：</h4><p>java队列函数和C++不一样：</p>
<p>.add（）添加一组数据尾部</p>
<p>.firstNode()取第一组数据，不删</p>
<p>.poll() <strong>&#x2F;</strong>.pop() 取第一组，删除</p>
<p>.size()有几组值</p>
<p>.removeFirst()删除第一组数据</p>
<p><strong>.push()往最前面插入一组值</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line"> <span class="comment">//在java中，LinkedList实现 Deque 接口，为 add、poll 提供先进先出队列操作，以及其他堆栈和双端队列操作。LinkedList是实现了List接口和Deque接口的双向链表</span></span><br><span class="line"> <span class="comment">//所以本题用LinkedList代替Queue。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> LinkedList&lt;Q&gt; que = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Main.Q&gt;();<span class="comment">//que为队列的名字</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Q</span>&#123;</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		<span class="type">int</span> y;</span><br><span class="line">		<span class="type">int</span> l;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> n,m,maxn=<span class="number">1005</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> dx[]=&#123;<span class="number">1</span>,-<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> dy[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,-<span class="number">1</span>&#125;;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> vis[][]= <span class="keyword">new</span> <span class="title class_">boolean</span> [maxn][maxn];<span class="comment">//判断是否跑过了 </span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> map[][] = <span class="keyword">new</span> <span class="title class_">int</span>[maxn][maxn];<span class="comment">//判断障碍</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">		 <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;x&lt;=<span class="number">1000</span>&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;=<span class="number">1000</span>&amp;&amp;!vis[x][y]&amp;&amp;map[x][y]==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		 <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line">		 	Q s=<span class="keyword">new</span> <span class="title class_">Q</span>();<span class="comment">//这代表的是创建一个队列对象</span></span><br><span class="line">			 s.x=<span class="number">500</span>;s.y =<span class="number">500</span>;s.l =<span class="number">0</span>;</span><br><span class="line">			 que.add(s);</span><br><span class="line">			 vis[s.x ][s.y ]=<span class="literal">true</span>;</span><br><span class="line">			 <span class="keyword">while</span>(que.size()!=<span class="number">0</span> )&#123;</span><br><span class="line">				 Q u=que.poll();</span><br><span class="line">			  <span class="keyword">if</span>(u.x ==m&amp;&amp;u.y ==n)&#123;</span><br><span class="line">			   <span class="keyword">return</span> u.l ;</span><br><span class="line">			  &#125;</span><br><span class="line">			  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">			   <span class="type">int</span> tx=u.x +dx[i];</span><br><span class="line">			   <span class="type">int</span> ty=u.y +dy[i];</span><br><span class="line">			   <span class="keyword">if</span>(check(tx,ty))&#123;</span><br><span class="line">				   Q temp=<span class="keyword">new</span> <span class="title class_">Q</span>();temp.x =tx;temp.y =ty;</span><br><span class="line">			    temp.l =u.l+<span class="number">1</span>;</span><br><span class="line">			    que.add(temp);</span><br><span class="line">			    vis[tx][ty]=<span class="literal">true</span>;  </span><br><span class="line">			   &#125;</span><br><span class="line">			  &#125;</span><br><span class="line">			 &#125; </span><br><span class="line">			 <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Scanner scanner=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		</span><br><span class="line">		<span class="type">int</span> Y1,X1,NN;</span><br><span class="line">		m = scanner.nextInt();</span><br><span class="line">		n = scanner.nextInt();</span><br><span class="line">		NN = scanner.nextInt();</span><br><span class="line">		m=m+<span class="number">500</span>;n=n+<span class="number">500</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;NN;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			X1 = scanner.nextInt();</span><br><span class="line">			Y1 = scanner.nextInt();</span><br><span class="line">			map[X1+<span class="number">500</span>][Y1+<span class="number">500</span>]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	System.out.println(bfs());</span><br><span class="line">		 </span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-dfs例题"><a href="#3-dfs例题" class="headerlink" title="3.dfs例题"></a>3.dfs例题</h2><p>———-八皇后</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">Isdanger</span><span class="params">(<span class="type">int</span> row,<span class="type">int</span> col,<span class="type">int</span>[][]C2)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(C2[i][col]==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((((row+col)==(i+j))||((row-col)==(i-j)))&amp;&amp;C2[i][j]==<span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n=<span class="number">8</span>,count;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> C1[][] = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                C1[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        putchess(<span class="number">0</span>,C1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putchess</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> [][]C1)</span> &#123;</span><br><span class="line">        <span class="type">int</span> [][]C2 = (<span class="type">int</span>[][])C1.clone();</span><br><span class="line">        <span class="keyword">if</span>(row==n)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            System.out.println(<span class="string">&quot;第 &quot;</span>+count+<span class="string">&quot; 种 &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.print(C2[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Isdanger(row, i, C2)) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        C2[row][j]=<span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    C2[row][i]=<span class="number">1</span>;</span><br><span class="line">                    putchess(row+<span class="number">1</span>, C2);<span class="comment">//不要忘了递归要返回的，之前想不通的第一个矩阵如何到第二个矩阵的，就是因为它可以回溯，先到达最深，再回溯到倒数第二，以此倒着不断判定所有可能情况</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>深搜（隐式地）利用了栈（后进先出）进行计算，所以我的方法可能可以改进</p>
<h2 id="4-KMP学习思路"><a href="#4-KMP学习思路" class="headerlink" title="4.KMP学习思路"></a>4.KMP学习思路</h2><p>不要尝试去反推</p>
<p><strong>推荐学习网址</strong>：<a href="https://www.cnblogs.com/-citywall123/p/11688576.html%EF%BC%9B">https://www.cnblogs.com/-citywall123/p/11688576.html；</a></p>
<p><strong>注意</strong>：<strong>在有符号整型和无符号整型的比较中，自动将有符号整型数转换为无符号整型。</strong></p>
<h4 id="C-方法："><a href="#C-方法：" class="headerlink" title="C++方法："></a>C++方法：</h4><p>不要尝试理解kmp算法，与递归同理</p>
<p>下面是求<strong>Next</strong>数组的方法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n = <span class="number">1008</span>;  </span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> Next[n];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">aa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>(i&lt;=s.<span class="built_in">length</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(j==<span class="number">-1</span>||s[i]==s[j])</span><br><span class="line">		&#123;</span><br><span class="line">			Next[++i]=++j;</span><br><span class="line">		&#125;<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			j=Next[j];</span><br><span class="line">		&#125;</span><br><span class="line">	 &#125; </span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin&gt;&gt;s;</span><br><span class="line">	<span class="built_in">aa</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;Next[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>下面是全的代码</strong>：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> next1[n];</span><br><span class="line">string re;</span><br><span class="line">string te;</span><br><span class="line"><span class="type">int</span> re1,te1;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_ne</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> j=<span class="number">-1</span>;</span><br><span class="line">	next1[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">	<span class="comment">//	i在前面，j在后面 </span></span><br><span class="line">	<span class="keyword">while</span>(i&lt;te1)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">if</span>(j==<span class="number">-1</span>||te[i]==te[j])</span><br><span class="line">	&#123;</span><br><span class="line">		next1[++i]=++j;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		j=next1[j];</span><br><span class="line">	&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_piace</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(i&lt;re1&amp;&amp;j&lt;te1)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(j==<span class="number">-1</span>||te[j]==re[i])</span><br><span class="line">		&#123;</span><br><span class="line">			i++;</span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			j=next1[j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(j&gt;=te1)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> i-te1+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin&gt;&gt;re&gt;&gt;te;</span><br><span class="line">	re1=re.<span class="built_in">size</span>();</span><br><span class="line">	te1=te.<span class="built_in">length</span>();</span><br><span class="line">	<span class="built_in">get_ne</span>();</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;查找到的位置初始是：&quot;</span>&lt;&lt;<span class="built_in">get_piace</span>()&lt;&lt;endl<span class="comment">//由一开始的</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>

<h4 id="java方法："><a href="#java方法：" class="headerlink" title="java方法："></a><strong>java方法：</strong></h4><p>实际上没啥区别，就再写一遍而已：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span><span class="number">1000000</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> Next[] =<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> TE[] =<span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> RE[] =<span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> re1;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> te1;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String re;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String te;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">get_next</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> j=-<span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">		Next[<span class="number">0</span>]=-<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(i&lt;te1)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(j==-<span class="number">1</span>||TE[i]==TE[j])</span><br><span class="line">			&#123;</span><br><span class="line">				Next[++i]=++j;</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				j=Next[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">get_piace</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> i=<span class="number">0</span>;<span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(i&lt;re1&amp;&amp;j&lt;te1)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(j==-<span class="number">1</span>||TE[j]==RE[i])</span><br><span class="line">		&#123;</span><br><span class="line">			i++;</span><br><span class="line">			j++;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			j=Next[j];</span><br><span class="line">		&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(j&gt;=te1)<span class="comment">//这里当时没写等号          </span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> i-te1+<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		re=scanner.nextLine();</span><br><span class="line">		te=scanner.nextLine();</span><br><span class="line">		RE=re.toCharArray();</span><br><span class="line">		TE=te.toCharArray();</span><br><span class="line">		re1 = re.length();</span><br><span class="line">		te1 = te.length();</span><br><span class="line">		get_next();</span><br><span class="line">		System.out.println(get_piace());</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>算法</category>
        <category>算法初始</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/02/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>云服务基本命令</title>
    <url>/2024/02/02/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p><a href="#1.windows%E7%AB%AF%E5%8F%A3%E6%98%BE%E7%A4%BA%E5%92%8C%E5%85%B3%E9%97%AD">1.windows端口显示和关闭</a></p>
<p><a href="#2.linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4">2.linux基本命令</a></p>
<p><a href="#3.docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4">3.docker基本命令</a></p>
<p>[4.mysql 状态和启动](#4.mysql 状态和启动)</p>
<p><a href="#5.redis">5.redis</a></p>
<h2 id="1-windows端口显示和关闭"><a href="#1-windows端口显示和关闭" class="headerlink" title="1.windows端口显示和关闭"></a>1.windows端口显示和关闭</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">显示端口</span><br><span class="line">netstat -ano | findstr <span class="number">80</span></span><br><span class="line"></span><br><span class="line">关闭端口</span><br><span class="line">taskkill -PID <span class="number">25264</span> -F </span><br></pre></td></tr></table></figure>



<h2 id="2-linux基本命令"><a href="#2-linux基本命令" class="headerlink" title="2.linux基本命令"></a>2.linux基本命令</h2><p>[2.0 腾讯云服务器](#2.0 腾讯云服务器)</p>
<p><a href="#2.1.linux%E9%98%B2%E7%81%AB%E5%A2%99%E5%91%BD%E4%BB%A4">2.1.linux防火墙命令</a></p>
<p><a href="#2.2%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4">2.2基本命令</a></p>
<h4 id="2-0-腾讯云服务器"><a href="#2-0-腾讯云服务器" class="headerlink" title="2.0 腾讯云服务器"></a>2.0 腾讯云服务器</h4><h4 id="2022-10月到期-密码：-x32-x33-x32-x39-x36-54-48-57-x36-x39-64-113-x71-46-99-x6f-x6d"><a href="#2022-10月到期-密码：-x32-x33-x32-x39-x36-54-48-57-x36-x39-64-113-x71-46-99-x6f-x6d" class="headerlink" title="-2022.10月到期-密码：&#x32;&#x33;&#x32;&#x39;&#x36;&#54;&#48;&#57;&#x36;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;"></a>-2022.10月到期-密码：<a href="mailto:&#x32;&#x33;&#x32;&#x39;&#x36;&#54;&#48;&#57;&#x36;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;">&#x32;&#x33;&#x32;&#x39;&#x36;&#54;&#48;&#57;&#x36;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;</a></h4><h4 id="地址：121-5-164-60"><a href="#地址：121-5-164-60" class="headerlink" title="-地址：121.5.164.60"></a>-地址：121.5.164.60</h4><h4 id="2-1-linux防火墙命令"><a href="#2-1-linux防火墙命令" class="headerlink" title="2.1.linux防火墙命令"></a>2.1.linux防火墙命令</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、开启防火墙 --关闭</span><br><span class="line">    systemctl start firewalld</span><br><span class="line">    systemctl stop firewalld.service</span><br><span class="line">    systemctl status firewalld </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、开放指定端口</span><br><span class="line">      firewall-cmd --zone=public --add-port=<span class="number">1935</span>/tcp --permanent</span><br><span class="line"> 命令含义：</span><br><span class="line">--zone #作用域</span><br><span class="line">--add-port=<span class="number">1935</span>/tcp  #添加端口，格式为：端口/通讯协议</span><br><span class="line">--permanent  #永久生效，没有此参数重启后失效</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、重启防火墙</span><br><span class="line">      firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、查看端口号</span><br><span class="line">netstat -ntlp   <span class="comment">//查看当前所有tcp端口·</span></span><br><span class="line"></span><br><span class="line">netstat -ntulp |grep <span class="number">1935</span>   <span class="comment">//查看所有1935端口使用情况·</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">5.</span>列出所有开放</span><br><span class="line">firewall-cmd --<span class="built_in">list</span>-all --permanent</span><br></pre></td></tr></table></figure>

<h4 id="2-2基本命令"><a href="#2-2基本命令" class="headerlink" title="2.2基本命令"></a>2.2基本命令</h4><p>在linux里跑名为springboot-03-0.0.1-SNAPSHOT.jar的程序，把日志写到temp1.txt:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup java -jar springboot-03-0.0.1-SNAPSHOT.jar &gt;temp1.txt &amp;</span><br></pre></td></tr></table></figure>

<p>查看端口号和杀死进程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo lsof -i:8080</span><br><span class="line"></span><br><span class="line">sudo kill -9 474156</span><br></pre></td></tr></table></figure>

<p>文件互通-导入-导出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install lszrz</span><br><span class="line">rz</span><br><span class="line">sz</span><br></pre></td></tr></table></figure>

<p>单个删除-批量删除：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单个删除：rm -f + 文件名</span><br><span class="line"></span><br><span class="line">批量删除：rm -f + *文件关键字* </span><br></pre></td></tr></table></figure>

<p>vim编辑：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim+文件名</span><br><span class="line">i 进入编辑模式</span><br><span class="line">Esc：退出编辑模式</span><br><span class="line">：wq 保存退出</span><br><span class="line">：q直接退出</span><br></pre></td></tr></table></figure>

<p>jdk位置：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">/usr/lib/jvm/java<span class="number">-11</span>-openjdk<span class="number">-11.0</span><span class="number">.13</span><span class="number">.0</span><span class="number">.8</span><span class="number">-4.</span>el8_5.x86_64/bin/java</span><br></pre></td></tr></table></figure>

<p>文件操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir 新建文件夹</span><br><span class="line">cat 进入文件</span><br><span class="line">touch 创建文件</span><br><span class="line">mv +文件名+文件名1  改名为文件名1</span><br><span class="line">mv +文件名+路径  移动位置</span><br><span class="line">cp +文件名+路径  复制文件到</span><br></pre></td></tr></table></figure>

<p>解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf</span><br></pre></td></tr></table></figure>

<p>寻找</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name redis-benchmark</span><br></pre></td></tr></table></figure>



<h2 id="3-docker基本命令"><a href="#3-docker基本命令" class="headerlink" title="3.docker基本命令"></a>3.docker基本命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker: 启动docker</span><br><span class="line">sudo systemctl enable docker: 开机自启</span><br><span class="line">docker update mysql8 --restart=always  自启</span><br><span class="line">docker 镜像加速阿里云</span><br><span class="line">docker search: ---------搜索</span><br><span class="line">docker pull：  ------------拉取</span><br><span class="line">docker images :   ----显示所有镜像</span><br><span class="line">docker ps ： ------显示在跑的所有容器</span><br><span class="line">docker ps -a ： -----------显示所有容器</span><br><span class="line">docker inspect 容器id： ----------显示容器详细信息</span><br><span class="line"></span><br><span class="line">docker run -it -v 主机目录：容器目录 ：---------数据卷 数据互通</span><br><span class="line"># 如何确定是具名挂载还是匿名挂载，还是指定路径挂载！</span><br><span class="line">-v  容器内路径                   # 匿名挂载</span><br><span class="line">-v  卷名:容器内路径               # 具名挂载</span><br><span class="line">-v /主机路径:容器内路径            # 指定路径挂载</span><br><span class="line"></span><br><span class="line">docker run -d -p 3344:8080 --name tomcat01 tomcat:--- </span><br><span class="line">-d 后台挂载 -p 指定端口 -P随机端口  -name 指定名字 -e 设置密码啥的</span><br><span class="line">docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名：[TAG]: ---提交容器成为新的版本</span><br><span class="line">daocker rmi -f + ID ：---删除镜像</span><br><span class="line">docker rm -f + ID： ---- 删除容器</span><br><span class="line">docker exec -it + ID + /bin/bash ：-----再开一个命令行</span><br><span class="line">docker attach + ID :------------进入正在跑的命令行</span><br><span class="line">docker start 容器id         :  # 启动容器</span><br><span class="line">docker restart 容器id       :  # 重启容器</span><br><span class="line">docker stop 容器id          :  # 停止当前正在运行的容器</span><br><span class="line">docker kill 容器id         :   # 强制停止当前的容器</span><br><span class="line">exit        :——————退出结束进程</span><br><span class="line">Ctrl + P + Q  :——————————退出不结束进程</span><br><span class="line">docker cp 容器id：容器内路径    目的地主机路径 : ——————————————cv到外部</span><br><span class="line">curl localhost:3344   ---------------测试端口</span><br><span class="line">docker network create --driver bridge --subnet 192.168.0.0/16 --gateway 192.168.0.1 mynet :------------创建网络</span><br><span class="line">docker network ls :显示网络</span><br><span class="line"></span><br><span class="line">docker tag diytomcat 1314520007/tomcat:1.0  :</span><br><span class="line">---------新加一个容器改变名字为1314520007/tomcat 版本为1.0，在push要记得名字要和库一样</span><br><span class="line">docker build -f mydockerfile -t mycentos:0.1 .  :---------------构建镜像</span><br><span class="line">docker build -t springboot1 .  :---------------当文件为Dockerfile时不用-f 指定 </span><br></pre></td></tr></table></figure>



<h2 id="4-mysql-状态和启动"><a href="#4-mysql-状态和启动" class="headerlink" title="4.mysql 状态和启动"></a>4.mysql 状态和启动</h2><p>（下面的腾讯云服务器当时没续费，仅做参考，天天被黑，所以配置的ip白名单</p>
<p>—腾讯云密码：324m&gt;sklG1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status mysqld</span><br><span class="line">systemctl restart mysqld.service</span><br></pre></td></tr></table></figure>

<p>修改密码：<a href="https://www.cnblogs.com/shigfdengys/p/12152508.html">https://www.cnblogs.com/shigfdengys/p/12152508.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root -p password &quot;324m&gt;sklG1&quot;</span><br></pre></td></tr></table></figure>

<p>服务器白名单</p>
<p>39.144.96.201 &#x2F;&#x2F;皮卡丘</p>
<p>59.49.34.10</p>
<p>182.200.222.48</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">//查询</span><br><span class="line">select Host,User from user;</span><br><span class="line">//删除</span><br><span class="line">//DELETE FROM user WHERE User=&#x27;username&#x27; and Host=&#x27;host&#x27;;</span><br><span class="line">drop user root@&#x27;%&#x27;;//这个比较好</span><br><span class="line">//添加</span><br><span class="line">create user root@&#x27;182.200.222.48&#x27; identified by &#x27;324m&gt;sklG1&#x27;;</span><br><span class="line">GRANT ALL ON *.* TO &#x27;root&#x27;@&#x27;182.200.222.48&#x27;; </span><br><span class="line">//grant all privileges on test.* to root@&#x27;202.99.210.140&#x27;;</span><br><span class="line">//刷新权限</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;182.200.222.48&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;324m&gt;sklG1&#x27;;</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p>ALTER USER ‘root‘@202.99.210.140’ IDENTIFIED WITH mysql_native_password BY ‘324m&gt;sklG1’;</p>
<h2 id="5-redis"><a href="#5-redis" class="headerlink" title="5.redis"></a>5.redis</h2><p><a href="#5.1%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4">5.1基本命令</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">keys *</span><br><span class="line"></span><br><span class="line">flushdb</span><br><span class="line"></span><br><span class="line">flushall</span><br><span class="line"></span><br><span class="line">set key value # set值</span><br><span class="line"></span><br><span class="line">keys * #查看当前db的所有key</span><br><span class="line"></span><br><span class="line">get key # 得到key的value</span><br><span class="line"></span><br><span class="line">exists key # 是否存在key（键）</span><br><span class="line"></span><br><span class="line">move key db # 移动键到另外一个数据库，共有16个数据库，默认为0</span><br><span class="line"></span><br><span class="line">expire key 秒数 # 设置过期时间，单位是秒</span><br><span class="line"></span><br><span class="line">ttl key # 查看还有多少时间过期</span><br><span class="line"></span><br><span class="line">type key # 查看key的具体类型</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>持久化</p>
<p>aof 默认不开启 保存命令</p>
<p>gdb 默认开启 保存数据集</p>
<p>远程连接记得</p>
<p>1.屏蔽配置文件的bind</p>
<p>2.protect-mode设置为no</p>
<p>启动–使用的哪个配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server mconfig/redis.conf</span><br><span class="line">redis-cli -p 6379</span><br></pre></td></tr></table></figure>

<p>退出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown</span><br><span class="line"> exit</span><br></pre></td></tr></table></figure>

<p>查看进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -tunple | grep 6379</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">volatile</span></span><br><span class="line">布隆过滤器-----缓存穿透</span><br></pre></td></tr></table></figure>

<p>sentinel monitor myredis  127.0.0.1 6379 1</p>
<p>sentinel auth-pass myredis 123456</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>云服务命令</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
